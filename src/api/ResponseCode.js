/**
 * 服务器返回的错误码，对于的提示信息
 */
class ResponseCode {
    codes = {
        '0': '请求响应成功',
        '-1': 'Token无效或过期',
        '1': '非系统统异常导致操作失败',
        '101': '手机号码或者密码不正确',
        '102': '短信验证码验证失败',
        '103': '验证码不正确',
        '104': '原密码错误',
        '105': '该手机号未注册过',
        '106': '该手机号码注册过哦',
        '107': '账户已被锁定，请联系客服',
        '108': '用户需重置密码才能登陆',
        '109': '为了您的账号安全，请修改密码哦',
        '110': '短信发送次数已达当日次数上限',
        '111': '手机短信验证码试错次数达上线',
        '112': '验证码不正确',
        '113': '您的密码和上次重复了哦',
        '114': '输入密码错误次数过多，账户已被锁定',
        '115': '手机号码错误',
        '116': '手机号已经存在',
        '117': '密码错误超过5次，账户被锁定5分钟',
        '401': '请求出错啦，请重试',

        '118': '手机号或密码不正确',
        '119': '解密失败',
        '120': '账户已锁定，请联系客服',
        '1001': '无效商品标识·',
        '1002': '无效商品数量',
        '1003': '订单信息错误，请重新核对后再付款',
        '1004': '无效购物车条目标识',
        '1005': '无效整车配件标识',
        '1006': '无效经销商标识',
        '1007': '无效收货地址条目',
        '1008': '无效省份标识',
        '1009': '无效城市标识',
        '1010': '无效区域编码',
        '1011': '无效购物车ID',
        '1012': '无效提车人信息',
        '1013': '核销码不存在',
        '1014': '没有此状态码,发现请核对',
        '1015': '短信发送失败',
        '1016': '无效的站内信id',
        '1017': '购物车为空',
        '1018': '订单里没有商品',
        '1019': '订单已支付，请不要重复支付',
        '1020': '商品评论只能评论一次',
        '1021': '非法的订单状态',
        '1022': '商品数量小于订单数量',
        '1023': '订单必须为主订单',
        '1024': '无效百搭件',
        '1025': '经销商未填写经纬度',
        '1026': '经销商填写经纬度有误',
        '1027': '商品spu的id不存在',
        '1028': '用户没有代金券',
        '1029': '商品库存不足',
        '1030': '查询商品不存在',
        '1031': '用户非法',
        '1045': '您的购买数量已超过最大可购买数量，请修改商品数量',
        '1046': '秒杀活动还未开启',
        '2001': '手机号码错误哦',
        '2002': '短信验证码错误',
        '2003': '不合法的图片验证码格式',
        '2004': '不合法性别',
        '2005': '不合法时间格式',
        '2006': '不合法日期格式',
        '2007': '有此状态码,发现请核对',
        '2008': '8-16个字符,由字母,数字和符号的两种以上组合',
        '2009': '不合法身份证格式',
        '2010': '参数有误',
        '20101': '参数中含有非法字符',
        '2011': '不合法的发票类型',
        '2012': '不合法的发票抬头',
        '2013': '无效短信类型',
        '2014': '订单已超时，请重新核对后再付款',
        '2015': '您的积分余额不足！',
        '2017': '短信验证码错误，请确认后重新填写',
        '3001': '时间范围有误',
        '3002': '超过文本字符串限制',
        '3003': '超过分页大小限制',
        '3005': '超过分页大小限制',
        '3006': '超过可添加收货地址条数限制',
        '3007': '超过可添加购物车数量限制',
        '3008': '页面大小格式不正确或者非数字',
        '3009': '当前页面格式为空或者非数字',
        '3010': '该用户没有订单',
        '3011': '超过购物车数量限制',
        '3012': '待支付订单和当前登录用户不一致，可能是恶意支付',
        '3013': '订单取消失败',
        '3014': '退换货失败',
        '3015': '可退数量不足',
        '3016': '订单已过退换货截止时间',
        '3021': '该代金券已不能使用，请重新选择',
        '4000': '白名单限制',
        '4001': '用户选择的选配包数量不满足最低要求',
        '5000': '文件过大',
        '5001': '文件格式错误',
        '5002': '文件数量超线',
        '7777': '服务器开小差了',
        '9999': '服务器开小差了',
        '10800': '只能在活动期间才可下单哦',
        '10801': '您选择的商品数量超出上限啦，敬请参与下次秒杀活动',
        '10802': '服务器繁忙，请稍候重新尝试~ ',
        '10803': ' 服务器繁忙，请稍候重新尝试~ ',
        '10804': '商品库存不足，暂时无法购买哦~',
        '10805': '服务器繁忙，请稍候重新尝试~ ',
        '10806': '积分不足，暂时无法购买哦~',
        '10807': '还没登录哦，登录后才能购买商品~',
        '10808': '服务器繁忙，请稍候重新尝试~ ',
        '10809': '该商品不能加入购物车购买',
        '10810': '该商品已下架',
        '10811': '服务器繁忙，请稍候重新尝试~ ',
        '11000': '积分获取失败，请稍后再试',
        '40009': '手机号码格式不正确哦~',
        '40015': '验证码格式错误~',
        '40111': '缺失手机号码',
        '40116': '缺失短信验证码',
        '40200': '登录超时，请重新登录',
        '40203': '短信验证码超时~',
        '40302': '短信验证码验证失败~',
        '40304': '手机号码或手机验证码有误',
        '40600': '手机号码被加入黑名单',
        '40700': '短信验证码发送频率超过限制(1次/手机/应用/分钟)',
        '40701': '短信验证码发送频率超过限制(20次/手机/应用/天)',
        '40702': '短信验证码试错频率超过限制(3次/手机/短信验证码)，短信验证码已失效',
        '40900': '账号被锁定，请联系客服',
        '43001': '用户第三方需要重新登录',
        '43005': '该用户已绑定同类型第三方的其他账号',
        '43006': '第三方登录账号与用户已绑定账号不一致',
        '43007': '第三方账号天内不能解绑',
        '43008': '微信账号已与其他长安账号绑定',
        '43011': '第三方登录信息已经失效需重新登录',
    };
    /**
     * @description 根据返回码，显示对应的信息
     * @param {*} code 错误码
     * @returns 错误的中文信息
     */

    showMsg(code) {
        if (code === '-1') return;
        return this.codes[code.toString()];
    }
}

export default new ResponseCode();
